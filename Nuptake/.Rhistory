slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Ncontent_MCARI$mean_Ncontent - mean(Ncontent_MCARI$mean_Ncontent))^2)
Ncontent_MCARI_plot <- Ncontent_MCARI %>%
ggplot(aes(x = meanMCARI, y = mean_Ncontent))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "MCARI", y = "N content (%)", title = "MCARI vs N content")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(Ncontent_MCARI$meanMCARI) + 0.12,
y = max(Ncontent_MCARI$mean_Ncontent) - 0.1,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Ncontent_MCARI$meanMCARI, Ncontent_MCARI$mean_Ncontent), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Ncontent_MCARI_plot
biomass_MCARI <- fuzzy_inner_join(mean_Nuptake, MCARI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
biomass_MCARI <- biomass_MCARI[-11,]
biomass_MCARI <- biomass_MCARI%>%
group_by(date.x)%>%
summarise(biomass_weight = first(`dry-tara`), meanMCARI = first(meanMCARI))%>%
na.omit()
linear_model <- lm(biomass_weight ~ meanMCARI, data = biomass_MCARI)
summary(linear_model)
View(biomass_MCARI)
biomass_MCARI <- biomass_MCARI [which(biomass_MCARI$date.x <= "2023-06-01"), ]
linear_model <- lm(biomass_weight ~ meanMCARI, data = biomass_MCARI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((biomass_MCARI$biomass_weight - mean(biomass_MCARI$biomass_weight))^2)
biomass_MCARI_plot <- biomass_MCARI %>%
ggplot(aes(x = meanMCARI, y = biomass_weight))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "MCARI", y = "biomass weight (g)", title = "MCARI vs biomass weight")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(biomass_MCARI$meanMCARI) + 0.1,
y = max(biomass_MCARI$biomass_weight) - 3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(biomass_MCARI$meanMCARI, biomass_MCARI$biomass_weight), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
biomass_MCARI_plot
library (data.table)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(fuzzyjoin)
mean_LAI_GNDVI <- fuzzy_inner_join(mean_LAI_values, GNDVI,
by = c("Date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(Date, date, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
mean_LAI_GNDVI <- mean_LAI_GNDVI[-18, ]
mean_LAI_GNDVI <- mean_LAI_GNDVI %>% group_by(Date)%>%
summarise(mean_LAI = first(mean_LAI), meanGNDVI = first(meanGNDVI))
mean_LAI_GNDVI <- mean_LAI_GNDVI [which(mean_LAI_GNDVI$Date <= "2023-06-01"), ]
linear_model <- lm(mean_LAI ~ meanGNDVI, data = mean_LAI_GNDVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((mean_LAI_GNDVI$mean_LAI - mean(mean_LAI_GNDVI$mean_LAI))^2)
linear_LAI_GNDVI_plot <- mean_LAI_GNDVI %>%
ggplot(aes(x = meanGNDVI, y = mean_LAI))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "GNDVI", y = "LAI", title = "GNDVI vs LAI")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(mean_LAI_GNDVI$meanGNDVI) + 0.02,
y = max(mean_LAI_GNDVI$mean_LAI) - 0.3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(mean_LAI_GNDVI$meanGNDVI, mean_LAI_GNDVI$mean_LAI), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_LAI_GNDVI_plot
CropHeight_GNDVI <- fuzzy_inner_join(mean_field_CropHeight, GNDVI,
by = c("Date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(Date, date, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
group_by(Date)%>%
summarise(`mean_height(cm)` = first(`mean_height(cm)`), meanGNDVI = first(meanGNDVI))
CropHeight_GNDVI <- CropHeight_GNDVI [which(CropHeight_GNDVI$Date <= "2023-06-01"), ]
linear_model <- lm(`mean_height(cm)` ~ meanGNDVI, data = CropHeight_GNDVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((CropHeight_GNDVI$`mean_height(cm)` - mean(CropHeight_GNDVI$`mean_height(cm)`))^2)
linear_CH_GNDVI_plot <- CropHeight_GNDVI %>%
ggplot(aes(x = meanGNDVI, y = `mean_height(cm)`))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "GNDVI", y = "Crop height (cm)", title = "GNDVI vs Crop height")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(CropHeight_GNDVI$meanGNDVI) + 0.02,
y = max(CropHeight_GNDVI$`mean_height(cm)`) - 10,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(CropHeight_GNDVI$meanGNDVI, CropHeight_GNDVI$`mean_height(cm)`), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_CH_GNDVI_plot
Ncontent_GNDVI <- fuzzy_inner_join(mean_Nuptake, GNDVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
Ncontent_GNDVI <- Ncontent_GNDVI[-11, ]
Ncontent_GNDVI <- Ncontent_GNDVI%>%
group_by(date.x)%>%
summarise(mean_Ncontent = first(`%N corr.`), meanGNDVI = first(meanGNDVI))
Ncontent_GNDVI <- Ncontent_GNDVI [which(Ncontent_GNDVI$date.x <= "2023-06-01"), ]
linear_model <- lm(mean_Ncontent ~ meanGNDVI, data = Ncontent_GNDVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Ncontent_GNDVI$mean_Ncontent - mean(Ncontent_GNDVI$mean_Ncontent))^2)
Ncontent_GNDVI_plot <- Ncontent_GNDVI %>%
ggplot(aes(x = meanGNDVI, y = mean_Ncontent))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "GNDVI", y = "N content (%)", title = "GNDVI vs N content")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(Ncontent_GNDVI$meanGNDVI) + 0.08,
y = max(Ncontent_GNDVI$mean_Ncontent) - 0.3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Ncontent_GNDVI$meanGNDVI, Ncontent_GNDVI$mean_Ncontent), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Ncontent_GNDVI_plot
biomass_GNDVI <- fuzzy_inner_join(mean_Nuptake, GNDVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
biomass_GNDVI <- biomass_GNDVI [-11,]
biomass_GNDVI<- biomass_GNDVI %>%
group_by(date.x)%>%
summarise(biomass_weight = first(`dry-tara`), meanGNDVI = first(meanGNDVI))%>%
na.omit()
View(biomass_GNDVI)
biomass_GNDVI <- biomass_GNDVI [which(biomass_GNDVI$date.x <= "2023-06-01"), ]
linear_model <- lm(biomass_weight ~ meanGNDVI, data = biomass_GNDVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((biomass_GNDVI$biomass_weight - mean(biomass_GNDVI$biomass_weight))^2)
biomass_GNDVI_plot <- biomass_GNDVI %>%
ggplot(aes(x = meanGNDVI, y = biomass_weight))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "GNDVI", y = "biomass weight (g)", title = "GNDVI vs biomass weight")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(biomass_GNDVI$meanGNDVI) + 0.02,
y = max(biomass_GNDVI$biomass_weight) - 10,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(biomass_GNDVI$meanGNDVI, biomass_GNDVI$biomass_weight), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
biomass_GNDVI_plot
mean_LAI_EVI <- fuzzy_inner_join(mean_LAI_values, EVI,
by = c("Date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(Date, date, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
mean_LAI_EVI <- mean_LAI_EVI [-18, ]
mean_LAI_EVI <- mean_LAI_EVI %>% group_by(Date)%>%
summarise(mean_LAI = first(mean_LAI), meanEVI = first(meanEVI))
mean_LAI_EVI <- mean_LAI_EVI [which(mean_LAI_EVI$Date <= "2023-06-01"), ]
linear_model <- lm(mean_LAI ~ meanEVI, data = mean_LAI_EVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((mean_LAI_EVI$mean_LAI - mean(mean_LAI_EVI$mean_LAI))^2)
linear_LAI_EVI_plot <- mean_LAI_EVI %>%
ggplot(aes(x = meanEVI, y = mean_LAI))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "LAI", title = "EVI vs LAI")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(mean_LAI_EVI$meanEVI) + 0.02,
y = max(mean_LAI_EVI$mean_LAI) - 0.3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(mean_LAI_EVI$meanEVI, mean_LAI_EVI$mean_LAI), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_LAI_EVI_plot
CropHeight_EVI <- fuzzy_inner_join(mean_field_CropHeight, EVI,
by = c("Date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(Date, date, units = "days")))%>%
arrange(date_difference, decreasing = FALSE) %>%
group_by(Date)%>%
summarise(`mean_height(cm)` = first(`mean_height(cm)`), meanEVI = first(meanEVI))
CropHeight_EVI <- CropHeight_EVI [which(CropHeight_EVI$Date <= "2023-06-01"), ]
linear_model <- lm(`mean_height(cm)` ~ meanEVI, data = CropHeight_EVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((CropHeight_EVI$`mean_height(cm)` - mean(CropHeight_EVI$`mean_height(cm)`))^2)
linear_CH_EVI_plot <- CropHeight_EVI %>%
ggplot(aes(x = meanEVI, y = `mean_height(cm)`))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "Crop height (cm)", title = "EVI vs Crop height")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(CropHeight_EVI$meanEVI) + 0.1,
y = max(CropHeight_EVI$`mean_height(cm)`) - 10,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(CropHeight_EVI$meanEVI, CropHeight_EVI$`mean_height(cm)`), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_CH_EVI_plot
Ncontent_EVI <- fuzzy_inner_join(mean_Nuptake, EVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
Ncontent_EVI <- Ncontent_EVI[-11, ]
Ncontent_EVI <- Ncontent_EVI%>%
group_by(date.x)%>%
summarise(mean_Ncontent = first(`%N corr.`), meanEVI = first(meanEVI))
Ncontent_EVI <- Ncontent_EVI [which(Ncontent_EVI$date.x <= "2023-06-01"), ]
linear_model <- lm(mean_Ncontent ~ meanEVI, data = Ncontent_EVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Ncontent_EVI$mean_Ncontent - mean(Ncontent_EVI$mean_Ncontent))^2)
Ncontent_EVI_plot <- Ncontent_EVI %>%
ggplot(aes(x = meanEVI, y = mean_Ncontent))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "N content (%)", title = "EVI vs N content")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(Ncontent_EVI$meanEVI) + 0.25,
y = max(Ncontent_EVI$mean_Ncontent) - 0.3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Ncontent_EVI$meanEVI, Ncontent_EVI$mean_Ncontent), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Ncontent_EVI_plot
biomass_EVI <- fuzzy_inner_join(mean_Nuptake, EVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
biomass_EVI <- biomass_EVI [-11,]
biomass_EVI<- biomass_EVI %>%
group_by(date.x)%>%
summarise(biomass_weight = first(`dry-tara`), meanEVI = first(meanEVI))%>%
na.omit()
biomass_EVI <- fuzzy_inner_join(mean_Nuptake, EVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
biomass_EVI <- biomass_EVI [-11,]
biomass_EVI<- biomass_EVI %>%
group_by(date.x)%>%
summarise(biomass_weight = first(`dry-tara`), meanEVI = first(meanEVI))%>%
na.omit()
biomass_EVI <- biomass_EVI [which(biomass_EVI$date.x <= "2023-06-01"), ]
linear_model <- lm(biomass_weight ~ meanEVI, data = biomass_EVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((biomass_EVI$biomass_weight - mean(biomass_EVI$biomass_weight))^2)
biomass_EVI_plot <- biomass_EVI %>%
ggplot(aes(x = meanEVI, y = biomass_weight))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "biomass weight (g)", title = "EVI vs biomass weight")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(biomass_EVI$meanEVI) + 0.08,
y = max(biomass_EVI$biomass_weight) - 10,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(biomass_EVI$meanEVI, biomass_EVI$biomass_weight), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
biomass_EVI_plot
Nuptake_NDVI <- fuzzy_inner_join(mean_Nuptake, NDVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
#I have to manually select the dates where the date difference is lower for NDVI measured after the cut, I want to keep the NDVI from before the cut
Nuptake_NDVI <- Nuptake_NDVI [-11, ]
Nuptake_NDVI <- Nuptake_NDVI %>%
group_by(date.x)%>%
summarise(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI), material = first(material))
View(Nuptake_NDVI)
Nuptake_NDVI <- Nuptake_NDVI %>%
group_by(date.x)%>%
summarise(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI), material = first(material.x))
linear_model <- lm(mean_Nuptake ~ meanNDVI, data = Nuptake_NDVI)
summary(linear_model)
View(Nuptake_NDVI)
mean_Nuptake <- mean_Nuptake[which(mean_Nuptake$date <= "2023-06-01"),]
Nuptake_NDVI <- fuzzy_inner_join(mean_Nuptake, NDVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
#I have to manually select the dates where the date difference is lower for NDVI measured after the cut, I want to keep the NDVI from before the cut
Nuptake_NDVI <- Nuptake_NDVI [-11, ]
Nuptake_NDVI <- Nuptake_NDVI %>%
group_by(date.x)%>%
summarise(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI), material = first(material.x))
linear_model <- lm(mean_Nuptake ~ meanNDVI, data = Nuptake_NDVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Nuptake_NDVI$mean_Nuptake - mean(Nuptake_NDVI$mean_Nuptake))^2)
linear_Nuptake_NDVI_plot <- Nuptake_NDVI %>%
ggplot(aes(x = meanNDVI, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDVI", y = "N uptake (g/m2)", title = "NDVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(Nuptake_NDVI$meanNDVI) + 0.06,
y = max(Nuptake_NDVI$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Nuptake_NDVI$meanNDVI, Nuptake_NDVI$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_Nuptake_NDVI_plot
linear_model <- lm(mean_Nuptake ~ meanNDVI, data = Nuptake_NDVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Nuptake_NDVI$mean_Nuptake - mean(Nuptake_NDVI$mean_Nuptake))^2)
linear_Nuptake_NDVI_plot <- Nuptake_NDVI %>%
ggplot(aes(x = meanNDVI, y = mean_Nuptake))+
geom_point(size =3, aes(shape = factor(material), color = factor(material)))+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDVI", y = "N uptake (g/m2)", title = "NDVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(Nuptake_NDVI$meanNDVI) + 0.06,
y = max(Nuptake_NDVI$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Nuptake_NDVI$meanNDVI, Nuptake_NDVI$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)+
scale_shape_manual(values = c(16, 17)) +
scale_color_manual(values = c("green3", "gold2")) +
guides(shape = guide_legend(title = "Biomass type",
keywidth = 1.5),
color = guide_legend(title = "Biomass type",))
linear_Nuptake_NDVI_plot
linear_Nuptake_NDVI_plot <- Nuptake_NDVI %>%
ggplot(aes(x = meanNDVI, y = mean_Nuptake))+
geom_point(size =3, aes(shape = factor(material), color = factor(material)))+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDVI", y = "N uptake (g/m2)", title = "NDVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(Nuptake_NDVI$meanNDVI) + 0.04,
y = max(Nuptake_NDVI$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Nuptake_NDVI$meanNDVI, Nuptake_NDVI$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)+
scale_shape_manual(values = c(16, 17)) +
scale_color_manual(values = c("green3", "gold2")) +
guides(shape = guide_legend(title = "Biomass type",
keywidth = 1.5),
color = guide_legend(title = "Biomass type",))
linear_Nuptake_NDVI_plot
linear_Nuptake_NDVI_plot <- Nuptake_NDVI %>%
ggplot(aes(x = meanNDVI, y = mean_Nuptake))+
geom_point(size =3, aes(shape = factor(material), color = factor(material)))+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDVI", y = "N uptake (g/m2)", title = "NDVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(Nuptake_NDVI$meanNDVI) + 0.03,
y = max(Nuptake_NDVI$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Nuptake_NDVI$meanNDVI, Nuptake_NDVI$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)+
scale_shape_manual(values = c(16, 17)) +
scale_color_manual(values = c("green3", "gold2")) +
guides(shape = guide_legend(title = "Biomass type",
keywidth = 1.5),
color = guide_legend(title = "Biomass type",))
linear_Nuptake_NDVI_plot
ggsave("NDVIvsNuptake.png", linear_Nuptake_NDVI_plot, width = 6, height = 10, dpi = 350)
