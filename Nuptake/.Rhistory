ggplot(aes(x = meanGNDVI, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "GNDVI", y = "N uptake (g/m2)", title = "GNDVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(Nuptake_GNDVI$meanGNDVI) + 0.01,
y = max(Nuptake_GNDVI$mean_Nuptake) - 0.5,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Nuptake_GNDVI$meanGNDVI, Nuptake_GNDVI$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_Nuptake_GNDVI_plot
ggsave("GNDVIvsNuptake.png", linear_Nuptake_GNDVI_plot, width = 6, height = 10, dpi = 350)
biomass_MCARI <- fuzzy_inner_join(mean_Nuptake, MCARI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
biomass_MCARI <- biomass_MCARI[-11,]
biomass_MCARI <- biomass_MCARI%>%
group_by(date.x)%>%
summarise(biomass_weight = first(`dry-tara`), meanMCARI = first(meanMCARI))%>%
na.omit()
linear_model <- lm(biomass_weight ~ meanMCARI, data = biomass_MCARI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((biomass_MCARI$biomass_weight - mean(biomass_MCARI$biomass_weight))^2)
biomass_MCARI_plot <- biomass_MCARI %>%
ggplot(aes(x = meanMCARI, y = biomass_weight))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "MCARI", y = "biomass weight (g)", title = "MCARI vs biomass weight")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(biomass_MCARI$meanMCARI) + 0.1,
y = max(biomass_MCARI$biomass_weight) - 3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(biomass_MCARI$meanMCARI, biomass_MCARI$biomass_weight), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
biomass_MCARI_plot
merged_NDVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
NDVI_quadrants$quadrant <- as.numeric(NDVI_quadrants$quadrant)
merged_NDVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
View(merged_NDVI_nUptake)
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(41:44), ]
merged_NDVI_nUptake <- merged_NDVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI))
#Find outliers
ggplot(merged_NDVI_nUptake, aes(x = meanNDVI, y = `mean_Nuptake`, group = date.x))+
geom_boxplot(outlier.colour="red", outlier.size = 2)
linear_model <- lm(mean_Nuptake ~ meanNDVI, data = merged_NDVI_nUptake)
summary(linear_model)
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date <= "2023-06-01"),]
merged_NDVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(41:44), ]
merged_NDVI_nUptake <- merged_NDVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI))
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date.x <= "2023-06-01"),]
#Find outliers
ggplot(merged_NDVI_nUptake, aes(x = meanNDVI, y = `mean_Nuptake`, group = date.x))+
geom_boxplot(outlier.colour="red", outlier.size = 2)
#outliers are from 2021-07-20 and 2021-09-02
#removed outlier from 2021-07-20
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(7,10), ]
linear_model <- lm(mean_Nuptake ~ meanNDVI, data = merged_NDVI_nUptake)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((merged_NDVI_nUptake$mean_Nuptake - mean(merged_NDVI_nUptake$mean_Nuptake))^2)
merged_NDVI_nUptake %>%
ggplot(aes(x = meanNDVI, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDVI", y = "N uptake (g/m2)", title = "NDVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(merged_NDVI_nUptake$meanNDVI) + 0.06,
y = max(merged_NDVI_nUptake$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(merged_NDVI_nUptake$meanNDVI, merged_NDVI_nUptake$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Nuptake_NDVI_q <- merged_NDVI_nUptake %>%
ggplot(aes(x = meanNDVI, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDVI", y = "N uptake (g/m2)", title = "NDVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(merged_NDVI_nUptake$meanNDVI) + 0.06,
y = max(merged_NDVI_nUptake$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(merged_NDVI_nUptake$meanNDVI, merged_NDVI_nUptake$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Nuptake_NDVI_q
ggsave("NDVIvsNuptake_q.png", Nuptake_NDVI_q, width = 6, height = 10, dpi = 350)
# NDRE vs Nuptake per quadrant --------------------------------------------
NDRE_quadrants$quadrant <- as.numeric(NDRE_quadrants$quadrant)
merged_NDRE_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDRE_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_NDRE_nUptake <- merged_NDRE_nUptake [-c(41:44), ]
merged_NDRE_nUptake <- merged_NDRE_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDRE = first(meanNDRE))
View(merged_NDRE_nUptake)
merged_NDVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(41:44), ]
merged_NDVI_nUptake <- merged_NDVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI))
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date.x <= "2023-06-01"),]
linear_model <- lm(mean_Nuptake ~ meanNDVI, data = merged_NDVI_nUptake)
summary(linear_model)
merged_NDVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(41:44), ]
merged_NDVI_nUptake <- merged_NDVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI))
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date.x <= "2023-06-01"),]
#outliers are from 2021-07-20 and 2021-09-02
#removed outlier from 2021-07-20
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(7,10), ]
linear_model <- lm(mean_Nuptake ~ meanNDVI, data = merged_NDVI_nUptake)
summary(linear_model)
#Find outliers
outliers <- ggplot(merged_NDVI_nUptake, aes(x = meanNDVI, y = `mean_Nuptake`, group = date.x))+
geom_boxplot(outlier.colour="red", outlier.size = 2)
#exporting boxplot
ggsave("NDVIvsNuptake_outliers.png", outliers, width = 6, height = 10, dpi = 350)
merged_NDVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(41:44), ]
merged_NDVI_nUptake <- merged_NDVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI))
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date.x <= "2023-06-01"),]
#Find outliers
outliers <- ggplot(merged_NDVI_nUptake, aes(x = meanNDVI, y = `mean_Nuptake`, group = date.x))+
geom_boxplot(outlier.colour="red", outlier.size = 2)
#exporting boxplot
ggsave("NDVIvsNuptake_outliers.png", outliers, width = 8, height = 10, dpi = 350)
#exporting boxplot
ggsave("NDVIvsNuptake_outliers.png", outliers, width = 8, height = 9, dpi = 350)
merged_NDRE_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDRE_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_NDRE_nUptake <- merged_NDRE_nUptake [-c(41:44), ]
merged_NDRE_nUptake <- merged_NDRE_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDRE = first(meanNDRE))
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date.x <= "2023-06-01"),]
#Find outliers
ggplot(merged_NDVI_nUptake, aes(x = meanNDVI, y = `mean_Nuptake`, group = date.x))+
geom_boxplot(outlier.colour="red", outlier.size = 2)
#exporting boxplot
ggsave("NDVIvsNuptake_outliers.png", outliers, width = 8, height = 6, dpi = 350)
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date.x <= "2023-06-01"),]
merged_NDRE_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDRE_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_NDRE_nUptake <- merged_NDRE_nUptake [-c(41:44), ]
merged_NDRE_nUptake <- merged_NDRE_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDRE = first(meanNDRE))
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date.x <= "2023-06-01"),]
merged_NDRE_nUptake <- merged_NDRE_nUptake[which(merged_NDRE_nUptake$date.x <= "2023-06-01"),]
#Find outliers
ggplot(merged_NDRE_nUptake, aes(x = meanNDRE, y = `mean_Nuptake`, group = date.x))+
geom_boxplot(outlier.colour="red", outlier.size = 2)
merged_NDRE_nUptake <- merged_NDRE_nUptake [-c(7,10), ]
linear_model <- lm(mean_Nuptake ~ meanNDRE, data = merged_NDRE_nUptake)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((merged_NDRE_nUptake$mean_Nuptake - mean(merged_NDRE_nUptake$mean_Nuptake))^2)
merged_NDRE_nUptake %>%
ggplot(aes(x = meanNDRE, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDRE", y = "N uptake (g/m2)", title = "NDRE vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(merged_NDRE_nUptake$meanNDRE) + 0.06,
y = max(merged_NDRE_nUptake$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(merged_NDRE_nUptake$meanNDRE, merged_NDRE_nUptake$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Nuptake_NDRE_q <- merged_NDRE_nUptake %>%
ggplot(aes(x = meanNDRE, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDRE", y = "N uptake (g/m2)", title = "NDRE vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(merged_NDRE_nUptake$meanNDRE) + 0.06,
y = max(merged_NDRE_nUptake$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(merged_NDRE_nUptake$meanNDRE, merged_NDRE_nUptake$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Nuptake_NDRE_q
ggsave("NDREvsNuptake_q.png", Nuptake_NDRE_q, width = 6, height = 10, dpi = 350)
# EVI vs Nuptake per quadrant --------------------------------------------
EVI_quadrants$quadrant <- as.numeric(EVI_quadrants$quadrant)
merged_EVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, EVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_EVI_nUptake <- merged_EVI_nUptake [-c(41:44), ]
merged_EVI_nUptake <- merged_EVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanEVI = first(meanEVI))
View(merged_EVI_nUptake)
merged_EVI_nUptake <- merged_EVI_nUptake[which(merged_NDRE_nUptake$date.x <= "2023-06-01"),]
#Find outliers
ggplot(merged_EVI_nUptake, aes(x = meanEVI, y = `mean_Nuptake`, group = date.x))+
geom_boxplot(outlier.colour="red", outlier.size = 2)
merged_EVI_nUptake <- merged_EVI_nUptake [-c(7,10), ]
linear_model <- lm(mean_Nuptake ~ meanEVI, data = merged_EVI_nUptake)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((merged_EVI_nUptake$mean_Nuptake - mean(merged_EVI_nUptake$mean_Nuptake))^2)
merged_EVI_nUptake %>%
ggplot(aes(x = meanEVI, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "N uptake (g/m2)", title = "EVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(merged_EVI_nUptake$meanEVI) + 0.06,
y = max(merged_EVI_nUptake$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(merged_EVI_nUptake$meanEVI, merged_EVI_nUptake$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
merged_NDVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(41:44), ]
merged_NDVI_nUptake <- merged_NDVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI))
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date.x <= "2023-06-01"),]
#outliers are from 2021-07-20 and 2021-09-02
#removed outlier from 2021-07-20
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(7,10), ]
merged_GNDVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, GNDVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_EVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, EVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_EVI_nUptake <- merged_EVI_nUptake [-c(41:44), ]
merged_EVI_nUptake <- merged_EVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanEVI = first(meanEVI))
merged_NDVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, NDVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(41:44), ]
merged_NDVI_nUptake <- merged_NDVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanNDVI = first(meanNDVI))
merged_NDVI_nUptake <- merged_NDVI_nUptake[which(merged_NDVI_nUptake$date.x <= "2023-06-01"),]
#outliers are from 2021-07-20 and 2021-09-02
#removed outlier from 2021-07-20
merged_NDVI_nUptake <- merged_NDVI_nUptake [-c(7,10), ]
merged_EVI_nUptake <- merged_EVI_nUptake[which(merged_NDRE_nUptake$date.x <= "2023-06-01"),]
merged_EVI_nUptake <- fuzzy_inner_join(mean_Nuptake_q, EVI_quadrants,
by = c("date", "quadrant (Q)" = "quadrant"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7)%>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)%>%
filter(`quadrant (Q)` == quadrant)
merged_EVI_nUptake <- merged_EVI_nUptake [-c(41:44), ]
merged_EVI_nUptake <- merged_EVI_nUptake %>%
group_by(date.x, `quadrant (Q)`)%>%
summarize(mean_Nuptake = first(mean_Nuptake), meanEVI = first(meanEVI))
merged_EVI_nUptake <- merged_EVI_nUptake[which(merged_EVI_nUptake$date.x <= "2023-06-01"),]
merged_EVI_nUptake <- merged_EVI_nUptake [-c(7,10), ]
linear_model <- lm(mean_Nuptake ~ meanEVI, data = merged_EVI_nUptake)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((merged_EVI_nUptake$mean_Nuptake - mean(merged_EVI_nUptake$mean_Nuptake))^2)
merged_EVI_nUptake %>%
ggplot(aes(x = meanEVI, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "N uptake (g/m2)", title = "EVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(merged_EVI_nUptake$meanEVI) + 0.06,
y = max(merged_EVI_nUptake$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(merged_EVI_nUptake$meanEVI, merged_EVI_nUptake$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_model <- lm(mean_Nuptake ~ meanEVI, data = merged_EVI_nUptake)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((merged_EVI_nUptake$mean_Nuptake - mean(merged_EVI_nUptake$mean_Nuptake))^2)
merged_EVI_nUptake %>%
ggplot(aes(x = meanEVI, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "N uptake (g/m2)", title = "EVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(merged_EVI_nUptake$meanEVI) + 0.06,
y = max(merged_EVI_nUptake$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(merged_EVI_nUptake$meanEVI, merged_EVI_nUptake$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
#Find outliers
ggplot(merged_EVI_nUptake, aes(x = meanEVI, y = `mean_Nuptake`, group = date.x))+
geom_boxplot(outlier.colour="red", outlier.size = 2)
View(Nuptake_NDVI)
ggplot(Nuptake_NDVI, aes(x = meanNDVI, y = `mean_Nuptake`, group = date.x))+
geom_boxplot(outlier.colour="red", outlier.size = 2)
Nuptake_EVI_q <- merged_EVI_nUptake %>%
ggplot(aes(x = meanEVI, y = mean_Nuptake))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "N uptake (g/m2)", title = "EVI vs N uptake")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(merged_EVI_nUptake$meanEVI) + 0.06,
y = max(merged_EVI_nUptake$mean_Nuptake) - 0.9,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(merged_EVI_nUptake$meanEVI, merged_EVI_nUptake$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Nuptake_EVI_q
ggsave("EVIvsNuptake_q.png", Nuptake_EVI_q, width = 6, height = 10, dpi = 350)
save.image("~/GitHub/Nuptake_project/workspace(2).RData")
# Assuming you want to use an exponential relationship with mean_Nuptake as the dependent variable
exponential_model <- lm(mean_Nuptake ~ exp(meanEVI), data = merged_EVI_nUptake)
summary(exponential_model)
exponential_coef <- coef(exponential_model)
intercept_exp <- exponential_coef[1]
slope_exp <- exponential_coef[2]
r_squared_exp <- 1 - sum(residuals(exponential_model)^2) / sum((merged_EVI_nUptake$mean_Nuptake - mean(merged_EVI_nUptake$mean_Nuptake))^2)
Nuptake_EVI_q_exp <- merged_EVI_nUptake %>%
ggplot(aes(x = meanEVI, y = mean_Nuptake)) +
geom_point() +
geom_smooth(method = lm, se = FALSE, formula = y ~ exp(x)) +
labs(x = "EVI", y = "N uptake (g/m2)", title = "EVI vs N uptake (Exponential)") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text(margin = margin(b = 20), size = 22)
) +
annotate(
"text",
x = min(merged_EVI_nUptake$meanEVI) + 0.06,
y = max(merged_EVI_nUptake$mean_Nuptake) - 0.9,
label = paste(
"y =", format(exp(slope_exp), digits = 2),
"*exp(", format(intercept_exp, digits = 2), ")",
"\nR2 =", round(r_squared_exp, 2),
"\nCorrelation:", round(cor(merged_EVI_nUptake$meanEVI, exp(merged_EVI_nUptake$mean_Nuptake)), 2)
),
hjust = 0,
vjust = 1,
color = "black",
size = 6
)
Nuptake_EVI_q_exp
Nuptake_EVI_q
