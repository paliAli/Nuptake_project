load("~/GitHub/Nuptake_project/workspace(2).RData")
View(NDVI_plot)
NDVI_plot
View(NDVI_plot)
library(ggplot2)
library(ggthemes)
ggsave("your_plot.png", NDVI_plot, device = "png", dpi = 350)
wd
setwd("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project")
ggsave("NDVI_timeseries.png", NDVI_plot, device = "png", dpi = 350)
setwd("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GooglEarthEngine\\NDVI")
setwd("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine\\NDVI")
ggsave("NDVI_timeseries.svg", NDVI_plot, device = "svg")
ggsave("NDVI_timeseries.png", NDVI_plot, device = "cairo-png", dpi = 350)
install.packages("Cairo")
library("Cairo")
ggsave("NDVI_timeseries.png", NDVI_plot, device = "cairo-png", dpi = 350)
NDVI_plot
ggsave("NDVI_timeseries.png", NDVI_plot, type = "cairo", antialias = "subpixel", width = 1500, height = 800, dpi = 350)
ggsave("NDVI_timeseries.png", NDVI_plot, type = "cairo", antialias = "subpixel", width = 800, height = 400, dpi = 350)
ggsave("NDVI_timeseries.png", NDVI_plot, type = "cairo", antialias = "subpixel", width = 40, height = 20, dpi = 350)
ggsave("NDVI_timeseries.png", NDVI_plot, type = "cairo", device = "rgl", width = 40, height = 20, dpi = 350)
library(Cairo)
ggsave("NDVI_timeseries.png", NDVI_plot, type = "cairo", antialias = "subpixel", width = 40, height = 20, dpi = 350)
ggsave("NDVI_timeseries.png", NDVI_plot, type = "cairo", antialias = "subpixel", width = 4, height = 2, dpi = 350)
ggsave("NDVI_timeseries.png", NDVI_plot, width = 4, height = 2, dpi = 350)
ggsave("NDVI_timeseries.png", NDVI_plot, width = 40, height = 20, dpi = 350)
ggsave("NDVI_timeseries.png", NDVI_plot, width = 20, height = 10, dpi = 350)
ggsave("NDVI_timeseries.png", NDVI_plot, width = 10, height = 5, dpi = 350)
ggsave("NDVI_timeseries.png", NDVI_plot, width = 10, height = 5, dpi = 350)
ggsave("NDVI_timeseries.jpg", NDVI_plot, width = 10, height = 5, dpi = 350)
NDVI_plot <- ggplot(data = NDVI, aes(x = date, y = meanNDVI))+
geom_point(size =4, color = "darkgreen")+
geom_line()+
labs(title = "NDVI",
x = "Date",
y = "NDVI",) +
theme_minimal() +
scale_x_date(date_labels = "%Y/%m", date_breaks = "2 months")+
theme_minimal()+
theme(plot.margin = margin(8, 30, 5, 5),
axis.text.x = element_text(size = 24, angle = 35),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(margin = margin(r = 20), size = 30),
axis.title.x = element_text(size = 30),
plot.title = element_text (margin = margin (b = 20), size = 60))
NDVI_plot
ggsave("NDVI_timeseries.jpg", NDVI_plot, width = 20, height = 10, dpi = 350)
ggsave("NDVI_timeseries.jpg", NDVI_plot, width = 20, height = 10, dpi = 350)
NDVI_plot <- ggplot(data = NDVI, aes(x = date, y = meanNDVI))+
geom_point(size =2, color = "darkgreen")+
geom_line()+
labs(title = "NDVI",
x = "Date",
y = "NDVI",) +
theme_minimal() +
scale_x_date(date_labels = "%Y/%m", date_breaks = "2 months")+
theme_minimal()+
theme(plot.margin = margin(8, 30, 5, 5),
axis.text.x = element_text(size = 12, angle = 35),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.title.x = element_text(size = 15),
plot.title = element_text (margin = margin (b = 20), size = 30))
NDVI_plot
ggsave("NDVI_timeseries.jpg", NDVI_plot, width = 10, height = 5, dpi = 350)
ggsave("NDVI_timeseries.jpg", NDVI_plot, width = 10, height = 5, dpi = 350)
ggsave("NDVI_timeseries.jpg", NDVI_plot, width = 10, height = 5, dpi = 350, quality = 95)
ggsave("NDVI_timeseries.jpg", NDVI_plot, dpi = 350, quality = 95)
ggsave("NDVI_timeseries.png", NDVI_plot, width = 10, height = 5, dpi = 350)
NDRE_plot
View(NDRE_plot)
setwd("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine\\NDRE")
ggsave("NDRE_timeseries.png", NDRE_plot, width = 10, height = 5, dpi = 350)
linear_LAI_NDRE_plot
ggsave("NDRE_timeseries.png", NDRE_plot, width = 10, height = 15, dpi = 350)
ggsave("NDREvsLAI(1).png", linear_LAI_NDRE_plot, width = 10, height = 15, dpi = 350)
ggsave("NDREvsLAI(1).png", linear_LAI_NDRE_plot, width = 8, height = 14, dpi = 350)
ggsave("NDREvsLAI(1).png", linear_LAI_NDRE_plot, width = 4, height = 7, dpi = 350)
ggsave("NDREvsLAI(1).png", linear_LAI_NDRE_plot, width = 6, height = 11, dpi = 350)
ggsave("NDREvsLAI(1).png", linear_LAI_NDRE_plot, width = 6, height = 10, dpi = 350)
ggsave("NDREvsLAI(1).png", linear_LAI_NDRE_plot, width = 6, height = 10, dpi = 350)
linear_CH_NDRE_plot
ggsave("NDREvsCropHeight(1).png", linear_CH_NDRE_plot, width = 6, height = 10, dpi = 350)
Ncontent_NDRE_plot
Ncontent_NDRE <- fuzzy_inner_join(mean_Nuptake, NDRE,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
library(fuzzyjoin)
library(dplyr)
Ncontent_NDRE <- fuzzy_inner_join(mean_Nuptake, NDRE,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
Ncontent_NDRE <- Ncontent_NDRE[-c(3,11), ]
Ncontent_NDRE <- Ncontent_NDRE%>%
group_by(date.x)%>%
summarise(mean_Ncontent = first(`%N corr.`), meanNDRE = first(meanNDRE))
linear_model <- lm(mean_Ncontent ~ meanNDRE, data = Ncontent_NDRE)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Ncontent_NDRE$mean_Ncontent - mean(Ncontent_NDRE$mean_Ncontent))^2)
Ncontent_NDRE_plot <- Ncontent_NDRE %>%
ggplot(aes(x = meanNDRE, y = mean_Ncontent))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDRE", y = "N content (%)", title = "NDRE vs N content")+
theme_minimal()+
theme(axis.text.x = element_text(size = 11),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 20), size = 12),
axis.title.y = element_text(margin = margin(r = 20), size = 12),
plot.title = element_text (margin = margin (b = 20), size = 20))+
annotate("text",
x = min(Ncontent_NDRE$meanNDRE) + 0.12,
y = max(Ncontent_NDRE$mean_Ncontent) - 0.4,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Ncontent_NDRE$meanNDRE, Ncontent_NDRE$mean_Ncontent), 2)),
hjust = 0, vjust = 1, color = "black", size = 4)
Ncontent_NDRE_plot
NDRE <- read.csv ("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine\NDRE\\NDRE_scale10.csv")
NDRE <- read.csv ("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine\NDRE\\NDRE_scale10.csv")
NDRE <- read.csv ("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine\\NDRE\\NDRE_scale10.csv")
NDRE <- NDRE %>% na.omit() %>%
rename(date = 'system.time_start')
NDRE$date <- as.Date(NDRE$date, format = "%b %d,%Y")
NDRE <- NDRE [which(NDRE$meanNDRE >= "0.1"), ]
Ncontent_NDRE <- fuzzy_inner_join(mean_Nuptake, NDRE,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
Ncontent_NDRE <- Ncontent_NDRE[-c(3,11), ]
Ncontent_NDRE <- Ncontent_NDRE%>%
group_by(date.x)%>%
summarise(mean_Ncontent = first(`%N corr.`), meanNDRE = first(meanNDRE))
linear_model <- lm(mean_Ncontent ~ meanNDRE, data = Ncontent_NDRE)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Ncontent_NDRE$mean_Ncontent - mean(Ncontent_NDRE$mean_Ncontent))^2)
Ncontent_NDRE_plot <- Ncontent_NDRE %>%
ggplot(aes(x = meanNDRE, y = mean_Ncontent))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDRE", y = "N content (%)", title = "NDRE vs N content")+
theme_minimal()+
theme(axis.text.x = element_text(size = 11),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 20), size = 12),
axis.title.y = element_text(margin = margin(r = 20), size = 12),
plot.title = element_text (margin = margin (b = 20), size = 20))+
annotate("text",
x = min(Ncontent_NDRE$meanNDRE) + 0.12,
y = max(Ncontent_NDRE$mean_Ncontent) - 0.4,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Ncontent_NDRE$meanNDRE, Ncontent_NDRE$mean_Ncontent), 2)),
hjust = 0, vjust = 1, color = "black", size = 4)
Ncontent_NDRE_plot
NDRE_plot <- ggplot(data = NDRE, aes(x = date, y = meanNDRE))+
geom_point(size =2, color = "darkgreen")+
geom_line()+
labs(title = "NDRE",
x = "Date",
y = "NDRE",) +
theme_minimal() +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months")+
theme_minimal()+
theme(plot.margin = margin(8, 20, 5, 5),
axis.text.x = element_text(size = 14, angle = 35),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 30))
NDRE_plot
View(NDRE)
mean_LAI_NDRE <- fuzzy_inner_join(mean_LAI_values, NDRE,
by = c("Date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(Date, date, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
mean_LAI_NDRE <- mean_LAI_NDRE [-c(7,15), ]
mean_LAI_NDRE <- mean_LAI_NDRE %>% group_by(Date)%>%
summarise(mean_LAI = first(mean_LAI), meanNDRE = first(meanNDRE))
mean_LAI_NDRE <- mean_LAI_NDRE [which(mean_LAI_NDRE$Date <= "2023-06-01"), ]
linear_model <- lm(mean_LAI ~ meanNDRE, data = mean_LAI_NDRE)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((mean_LAI_NDRE$mean_LAI - mean(mean_LAI_NDRE$mean_LAI))^2)
linear_LAI_NDRE_plot <- mean_LAI_NDRE %>%
ggplot(aes(x = meanNDRE, y = mean_LAI))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDRE", y = "LAI", title = "NDRE vs LAI")+
theme_minimal()+
theme(axis.text.x = element_text(size = 11),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 20), size = 12),
axis.title.y = element_text(margin = margin(r = 20), size = 12),
plot.title = element_text (margin = margin (b = 20), size = 20))+
annotate("text",
x = min(mean_LAI_NDRE$meanNDRE) + 0.02,
y = max(mean_LAI_NDRE$mean_LAI) - 0.3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(mean_LAI_NDRE$meanNDRE, mean_LAI_NDRE$mean_LAI), 2)),
hjust = 0, vjust = 1, color = "black", size = 4)
linear_LAI_NDRE_plot
mean_LAI_NDRE <- fuzzy_inner_join(mean_LAI_values, NDRE,
by = c("Date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(Date, date, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
mean_LAI_NDRE <- mean_LAI_NDRE [-c(16,18), ]
mean_LAI_NDRE <- mean_LAI_NDRE %>% group_by(Date)%>%
summarise(mean_LAI = first(mean_LAI), meanNDRE = first(meanNDRE))
mean_LAI_NDRE <- mean_LAI_NDRE [which(mean_LAI_NDRE$Date <= "2023-06-01"), ]
linear_model <- lm(mean_LAI ~ meanNDRE, data = mean_LAI_NDRE)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((mean_LAI_NDRE$mean_LAI - mean(mean_LAI_NDRE$mean_LAI))^2)
linear_LAI_NDRE_plot <- mean_LAI_NDRE %>%
ggplot(aes(x = meanNDRE, y = mean_LAI))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDRE", y = "LAI", title = "NDRE vs LAI")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(mean_LAI_NDRE$meanNDRE) + 0.07,
y = max(mean_LAI_NDRE$mean_LAI) - 0.3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(mean_LAI_NDRE$meanNDRE, mean_LAI_NDRE$mean_LAI), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_LAI_NDRE_plot
Ncontent_NDRE <- fuzzy_inner_join(mean_Nuptake, NDRE,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
Ncontent_NDRE <- Ncontent_NDRE[-c(9,11), ]
Ncontent_NDRE <- Ncontent_NDRE%>%
group_by(date.x)%>%
summarise(mean_Ncontent = first(`%N corr.`), meanNDRE = first(meanNDRE))
linear_model <- lm(mean_Ncontent ~ meanNDRE, data = Ncontent_NDRE)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Ncontent_NDRE$mean_Ncontent - mean(Ncontent_NDRE$mean_Ncontent))^2)
Ncontent_NDRE_plot <- Ncontent_NDRE %>%
ggplot(aes(x = meanNDRE, y = mean_Ncontent))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "NDRE", y = "N content (%)", title = "NDRE vs N content")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 22))+
annotate("text",
x = min(Ncontent_NDRE$meanNDRE) + 0.15,
y = max(Ncontent_NDRE$mean_Ncontent) - 0.2,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Ncontent_NDRE$meanNDRE, Ncontent_NDRE$mean_Ncontent), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Ncontent_NDRE_plot
ggsave("NDREvsNcontent(1).png", Ncontent_NDRE_plot, width = 6, height = 10, dpi = 350)
NDRE_quadrants_plot
ggsave("NDRE_quadrants(1).png", NDRE_quadrants_plot, width = 10, height = 5, dpi = 350)
biomass_NDRE_plot
ggsave("NDREvsBiomass(1).png", biomass_NDRE_plot, width = 6, height = 10, dpi = 350)
View(biomass_NDRE)
View(CropHeight_NDRE)
setwd("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine\\NDVI")
ggsave("NDVi_quadrants(1).png", NDVI_quadrants_plot, width = 10, height = 5, dpi = 350)
NDVI_quadrants_plot
ggsave("NDVIvsLAI(1).png", linear_LAI_NDVI_plot, width = 6, height = 10, dpi = 350)
ggsave("NDVIvsCropHeight(1).png", linear_NDVI_CH_plot, width = 6, height = 10, dpi = 350)
linear_NDVI_CH_plot
ggsave("NDVIvsNcontent(1).png", Ncontent_NDVI_plot, width = 6, height = 10, dpi = 350)
Ncontent_NDVI_plot
View(Ncontent_NDVI)
ggsave("NDVIvsBiomass(1).png", biomass_NDVI_plot, width = 6, height = 10, dpi = 350)
biomass_NDVI_plot
View(biomass_NDVI)
View(Nuptake_NDVI)
View(merged_NDVI_nUptake)
