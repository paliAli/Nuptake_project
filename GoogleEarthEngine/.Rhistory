axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))+
scale_shape_manual(values = c(16, 17)) +
scale_color_manual(values = c("green3", "gold2")) +
guides(shape = guide_legend(title = "Biomass type",
keywidth = 1.5),
color = guide_legend(title = "Biomass type",))
EVI_plot
ggsave("EVI_timeseries.png", EVI_plot, width = 10, height = 5, dpi = 350)
EVI <- read.csv ("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine\\EVI\\EVI_scale10.csv")
EVI <- EVI %>% na.omit() %>%
rename(date = 'system.time_start')
EVI$date <- as.Date(EVI$date, format = "%b %d,%Y")
EVI <- EVI[which(EVI$meanEVI >= "0.1"),]
EVI$material <- ifelse(EVI$date <= as.Date("2022-10-06"), "grass", "winter wheat")
EVI <- EVI [which(EVI$date <= "2023-07-01"), ]
ggsave("EVI_timeseries.png", EVI_plot, width = 10, height = 5, dpi = 350)
setwd("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine")
mean_LAI_EVI <- fuzzy_inner_join(mean_LAI_values, EVI,
by = c("Date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(Date, date, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
mean_LAI_EVI <- mean_LAI_EVI [-18, ]
mean_LAI_EVI <- mean_LAI_EVI %>% group_by(Date)%>%
summarise(mean_LAI = first(mean_LAI), meanEVI = first(meanEVI))
mean_LAI_EVI <- mean_LAI_EVI [which(mean_LAI_EVI$Date <= "2023-06-01"), ]
linear_model <- lm(mean_LAI ~ meanEVI, data = mean_LAI_EVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((mean_LAI_EVI$mean_LAI - mean(mean_LAI_EVI$mean_LAI))^2)
linear_LAI_EVI_plot <- mean_LAI_EVI %>%
ggplot(aes(x = meanEVI, y = mean_LAI))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "LAI")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15))+
annotate("text",
x = min(mean_LAI_EVI$meanEVI) + 0.02,
y = max(mean_LAI_EVI$mean_LAI) - 0.3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(mean_LAI_EVI$meanEVI, mean_LAI_EVI$mean_LAI), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_LAI_EVI_plot
ggsave("EVIvsLAI.png", linear_LAI_EVI_plot, width = 6, height = 10, dpi = 350)
Nuptake_EVI <- fuzzy_inner_join(mean_Nuptake, EVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
Nuptake_EVI <- Nuptake_EVI [-11, ]
Nuptake_EVI <- Nuptake_EVI %>%
group_by(date.x)%>%
summarise(mean_Nuptake = first(mean_Nuptake), meanEVI = first(meanEVI), material = first(material.x))
linear_model <- lm(mean_Nuptake ~ meanEVI, data = Nuptake_EVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Nuptake_EVI$mean_Nuptake - mean(Nuptake_EVI$mean_Nuptake))^2)
linear_Nuptake_EVI_plot <- Nuptake_EVI%>%
ggplot(aes(x = meanEVI, y = mean_Nuptake))+
geom_point(size =3, aes(shape = factor(material), color = factor(material)))+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "N uptake (g/m2)")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))+
annotate("text",
x = min(Nuptake_EVI$meanEVI) + 0.08,
y = max(Nuptake_EVI$mean_Nuptake) - 0.8,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Nuptake_EVI$meanEVI, Nuptake_EVI$mean_Nuptake), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)+
scale_shape_manual(values = c(16, 17)) +
scale_color_manual(values = c("green3", "gold2")) +
guides(shape = guide_legend(title = "Biomass type",
keywidth = 1.5),
color = guide_legend(title = "Biomass type"))
linear_Nuptake_EVI_plot
ggsave("EVIvsNuptake.png", linear_Nuptake_EVI_plot, width = 6, height = 10, dpi = 350)
CropHeight_EVI <- fuzzy_inner_join(mean_field_CropHeight, EVI,
by = c("Date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(Date, date, units = "days")))%>%
arrange(date_difference, decreasing = FALSE) %>%
group_by(Date)%>%
summarise(`mean_height(cm)` = first(`mean_height(cm)`), meanEVI = first(meanEVI))
CropHeight_EVI <- CropHeight_EVI [which(CropHeight_EVI$Date <= "2023-06-01"), ]
linear_model <- lm(`mean_height(cm)` ~ meanEVI, data = CropHeight_EVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((CropHeight_EVI$`mean_height(cm)` - mean(CropHeight_EVI$`mean_height(cm)`))^2)
linear_CH_EVI_plot <- CropHeight_EVI %>%
ggplot(aes(x = meanEVI, y = `mean_height(cm)`))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "Crop height (cm)")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15))+
annotate("text",
x = min(CropHeight_EVI$meanEVI) + 0.1,
y = max(CropHeight_EVI$`mean_height(cm)`) - 10,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(CropHeight_EVI$meanEVI, CropHeight_EVI$`mean_height(cm)`), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
linear_CH_EVI_plot
ggsave("EVIvsCropheight.png", linear_CH_EVI_plot, width = 6, height = 10, dpi = 350)
Ncontent_EVI <- fuzzy_inner_join(mean_Nuptake, EVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
Ncontent_EVI <- Ncontent_EVI[-11, ]
Ncontent_EVI <- Ncontent_EVI%>%
group_by(date.x)%>%
summarise(mean_Ncontent = first(`%N corr.`), meanEVI = first(meanEVI))
Ncontent_EVI <- Ncontent_EVI [which(Ncontent_EVI$date.x <= "2023-06-01"), ]
linear_model <- lm(mean_Ncontent ~ meanEVI, data = Ncontent_EVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((Ncontent_EVI$mean_Ncontent - mean(Ncontent_EVI$mean_Ncontent))^2)
Ncontent_EVI_plot <- Ncontent_EVI %>%
ggplot(aes(x = meanEVI, y = mean_Ncontent))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "N content (%)")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15))+
annotate("text",
x = min(Ncontent_EVI$meanEVI) + 0.25,
y = max(Ncontent_EVI$mean_Ncontent) - 0.3,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(Ncontent_EVI$meanEVI, Ncontent_EVI$mean_Ncontent), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
Ncontent_EVI_plot
ggsave("EVIvsNcontent.png", Ncontent_EVI_plot, width = 6, height = 10, dpi = 350)
biomass_EVI <- fuzzy_inner_join(mean_Nuptake, EVI,
by = c("date" = "date"),
match_fun = function(x, y) abs(difftime(x, y, units = "days")) <= 7) %>%
mutate(date_difference = abs(difftime(date.x, date.y, units = "days")))%>%
arrange(date_difference, decreasing = FALSE)
biomass_EVI <- biomass_EVI [-11,]
biomass_EVI<- biomass_EVI %>%
group_by(date.x)%>%
summarise(biomass_weight = first(`dry-tara`), meanEVI = first(meanEVI))%>%
na.omit()
biomass_EVI <- biomass_EVI [which(biomass_EVI$date.x <= "2023-06-01"), ]
linear_model <- lm(biomass_weight ~ meanEVI, data = biomass_EVI)
summary(linear_model)
linear_coef <- coef(linear_model)
intercept <- linear_coef[1]
slope <- linear_coef[2]
r_squared <- 1 - sum(residuals(linear_model)^2) / sum((biomass_EVI$biomass_weight - mean(biomass_EVI$biomass_weight))^2)
biomass_EVI_plot <- biomass_EVI %>%
ggplot(aes(x = meanEVI, y = biomass_weight))+
geom_point()+
geom_smooth(method = lm, se = FALSE)+
labs(x = "EVI", y = "biomass weight (g)")+
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15))+
annotate("text",
x = min(biomass_EVI$meanEVI) + 0.08,
y = max(biomass_EVI$biomass_weight) - 10,
label = paste("y =", format(slope, digits = 2),
"*x +",
format(intercept, digits = 2),
"\nR2 =", round(r_squared, 2),
"\nCorrelation:", round(cor(biomass_EVI$meanEVI, biomass_EVI$biomass_weight), 2)),
hjust = 0, vjust = 1, color = "black", size = 6)
biomass_EVI_plot
ggsave("EVIvsBiomass.png", biomass_EVI_plot, width = 6, height = 10, dpi = 350)
VI_df <- inner_join(NDVI, NDRE, by = "date")
VI_df <- inner_join(VI_df, MCARI, by = "date")
VI_df <- inner_join(VI_df, EVI, by = "date")
VI_df <- inner_join(VI_df, GNDVI, by = "date")
## Indexing the series
VI_ts <- VI_df
VI_ts[,2] <- VI_ts[,2]/mean(VI_ts[2:17,2])*100
VI_ts[,3] <- VI_ts[,3]/mean(VI_ts[2:17,3])*100
VI_ts[,4] <- VI_ts[,4]/mean(VI_ts[2:17,4])*100
VI_ts[,5] <- VI_ts[,5]/mean(VI_ts[2:17,5])*100
View(VI_ts)
VI_ts[,2] <- VI_ts[,2]/mean(VI_ts[2:17,2])*100
VI_ts[,2] <- VI_ts[,2]/mean(VI_ts[2:17,2])*100
VI_ts[,4] <- VI_ts[,4]/mean(VI_ts[2:17,4])*100
VI_ts[,6] <- VI_ts[,6]/mean(VI_ts[2:17,6])*100
VI_ts[,8] <- VI_ts[,8]/mean(VI_ts[2:17,8])*100
VI_ts[,10] <- VI_ts[,10]/mean(VI_ts[2:17,10])*100
VI_ts[,6] <- VI_ts[,6]/mean(VI_ts[2:17,6])*100
View(VI_ts)
# Reshape data to long format
VI_long <- VI_ts %>%
gather(vegetation_index, values, material, -date)
library(tidyr)
# Reshape data to long format
VI_long <- VI_ts %>%
gather(vegetation_index, values, material, -date)
View(VI_long)
# Reshape data to long format
VI_long <- VI_ts %>%
gather(vegetation_index, values, -date)
# Reshape data to long format
VI_long <- VI_ts %>%
gather(vegetation_index, values, material, -date)
# Reshape data to long format
VI_long <- VI_ts %>%
gather(vegetation_index, values, -date)
EVI <- read.csv ("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine\\EVI\\EVI_scale10.csv")
EVI <- EVI %>% na.omit() %>%
rename(date = 'system.time_start')
EVI$date <- as.Date(EVI$date, format = "%b %d,%Y")
EVI <- EVI[which(EVI$meanEVI >= "0.1"),]
EVI <- EVI [which(EVI$date <= "2023-07-01"), ]
NDVI <- read.csv ("C:\\Users\\pavla\\OneDrive\\Documents\\GitHub\\Nuptake_project\\GoogleEarthEngine\\NDVI\\NDVI_scale10.csv")
NDVI <- NDVI %>% na.omit()
NDVI$system.time_start <- as.Date(NDVI$system.time_start, format = "%b %d,%Y")
NDVI <- NDVI %>%
rename(date = system.time_start)
NDVI <- NDVI [which(NDVI$meanNDVI >= "0.1"), ]
NDVI <- NDVI [which(NDVI$date <= "2023-07-01"), ]
NDRE <- read.csv ("C:\\Users\\pavla\\OneDrive\\Documents\\Nuptake_project\\Nuptake_final\\GoogleEarthEngine\\NDRE\\NDRE_scale10.csv")
NDRE <- NDRE %>% na.omit()%>%
rename(date = 'system.time_start')
NDRE$date <- as.Date(NDRE$date, format = "%b %d,%Y")
NDRE <- NDRE [which(NDRE$meanNDRE >= "0.1"), ]
NDRE <- NDRE [which(NDRE$date <= "2023-07-01"), ]
MCARI <- read.csv ("C:\\Users\\pavla\\OneDrive\\Documents\\Nuptake_project\\Nuptake_final\\GoogleEarthEngine\\MCARI\\MCARI_scale10.csv")
MCARI <- MCARI %>% na.omit() %>%
rename(date = 'system.time_start')
MCARI$date <- as.Date(MCARI$date, format = "%b %d,%Y")
MCARI <- MCARI [which(MCARI$meanMCARI >= 0.01), ]
MCARI <- MCARI [which(MCARI$date <= "2023-07-01"), ]
GNDVI <- read.csv ("C:\\Users\\pavla\\OneDrive\\Documents\\Nuptake_project\\Nuptake_final\\GoogleEarthEngine\\GNDVI\\GNDVI_scale10.csv")
GNDVI <- GNDVI %>% na.omit() %>%
rename(date = 'system.time_start')
GNDVI$date <- as.Date(GNDVI$date, format = "%b %d,%Y")
GNDVI <- GNDVI[which(GNDVI$meanGNDVI >= "0.1"),]
GNDVI <- GNDVI [which(GNDVI$date <= "2023-07-01"), ]
VI_df <- inner_join(NDVI, NDRE, by = "date")
VI_df <- inner_join(VI_df, MCARI, by = "date")
VI_df <- inner_join(VI_df, EVI, by = "date")
VI_df <- inner_join(VI_df, GNDVI, by = "date")
## Indexing the series
VI_ts <- VI_df
VI_ts[,2] <- VI_ts[,2]/mean(VI_ts[2:17,2])*100
VI_ts[,3] <- VI_ts[,3]/mean(VI_ts[2:17,3])*100
VI_ts[,4] <- VI_ts[,4]/mean(VI_ts[2:17,4])*100
VI_ts[,5] <- VI_ts[,5]/mean(VI_ts[2:17,5])*100
VI_ts[,6] <- VI_ts[,6]/mean(VI_ts[2:17,6])*100
# Reshape data to long format
VI_long <- VI_ts %>%
gather(vegetation_index, values, -date)
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 2, alpha = 0.6)+
xlab("date") +
ylab("")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months") +
theme(axis.text.x = element_text(size = 11, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 20),
legend.title=element_blank(),
legend.text = element_text(size = 11))
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 2, alpha = 0.6)+
xlab("date") +
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months") +
theme(axis.text.x = element_text(size = 11, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 20),
legend.title=element_blank(),
legend.text = element_text(size = 11))
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 2, alpha = 0.6)+
xlab("date") +
ylab("")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months") +
theme(axis.text.x = element_text(size = 11, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 2, alpha = 0.6)+
xlab("date") +
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months") +
theme(axis.text.x = element_text(size = 11, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 2, alpha = 0.6)+
xlab("date") +
ylab("Vegetation indices")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months") +
theme(axis.text.x = element_text(size = 11, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
plot.title = element_text (margin = margin (b = 20), size = 20),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 2, alpha = 0.6)+
xlab("date") +
ylab("Vegetation indices")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months") +
theme(axis.text.x = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 2, alpha = 0.6)+
xlab("date") +
ylab("Vegetation indices")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months") +
theme(axis.text.x = element_text(size = 14, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 3, alpha = 0.6)+
xlab("date") +
ylab("Vegetation indices")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months") +
theme(axis.text.x = element_text(size = 14, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 3, alpha = 0.8)+
xlab("date") +
ylab("Vegetation indices")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "2 months") +
theme(axis.text.x = element_text(size = 14, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1, alpha = 0.7) +
geom_point(size = 3)+
xlab("date") +
ylab("Vegetation indices")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "3 months") +
theme(axis.text.x = element_text(size = 14, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
VIs_timeseries
NDVI_plot <- ggplot(data = NDVI, aes(x = date, y = meanNDVI))+
geom_line(linewidth = 1)+
geom_point(size =3, aes(shape = factor(material), color = factor(material)))+
labs(x = "Date",
y = "NDVI",) +
theme_minimal() +
scale_x_date(date_labels = "%b/%Y", date_breaks = "3 months")+
scale_y_continuous(breaks = seq(0.3, 0.9, by = 0.1)) +
theme_minimal()+
theme(plot.margin = margin(8, 30, 5, 5),
axis.text.x = element_text(size = 12, angle = 35),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.title.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))+
scale_shape_manual(values = c(16, 17)) +
scale_color_manual(values = c("green3", "gold2")) +
guides(shape = guide_legend(title = "Biomass type",
keywidth = 1.5),
color = guide_legend(title = "Biomass type",))
NDVI_plot
NDVI_plot <- ggplot(data = NDVI, aes(x = date, y = meanNDVI))+
geom_line(linewidth = 1, alpha = 0.7)+
geom_point(size =3, aes(shape = factor(material), color = factor(material)))+
labs(x = "Date",
y = "NDVI",) +
theme_minimal() +
scale_x_date(date_labels = "%b/%Y", date_breaks = "3 months")+
scale_y_continuous(breaks = seq(0.3, 0.9, by = 0.1)) +
theme_minimal()+
theme(plot.margin = margin(8, 30, 5, 5),
axis.text.x = element_text(size = 12, angle = 35),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.title.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))+
scale_shape_manual(values = c(16, 17)) +
scale_color_manual(values = c("green3", "gold2")) +
guides(shape = guide_legend(title = "Biomass type",
keywidth = 1.5),
color = guide_legend(title = "Biomass type",))
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 3)+
xlab("date") +
ylab("Vegetation indices")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "3 months") +
theme(axis.text.x = element_text(size = 14, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
VIs_timeseries <- ggplot(VI_long, aes(date, values, color = vegetation_index)) +
geom_line(linewidth = 1) +
geom_point(size = 3)+
xlab("Date") +
ylab("Vegetation indices")+
theme_minimal()+
scale_color_manual(values = index_colors, labels = index_labels) +
scale_x_date(date_labels = "%b/%Y", date_breaks = "3 months") +
theme(axis.text.x = element_text(size = 14, angle = 35),
axis.title.x = element_text(margin = margin(t = 20), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.text.y = element_blank())
VIs_timeseries
ggsave("VIs_timeseries.png", VIs_timeseries, width = 10, height = 5, dpi = 350)
save.image("~/GitHub/Nuptake_project/workspace(2).RData")
